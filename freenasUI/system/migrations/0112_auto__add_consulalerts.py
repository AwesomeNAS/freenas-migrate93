# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-03-30 18:46
from __future__ import unicode_literals

from django.db import migrations, models
import freenasUI.freeadmin.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ('system', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsulAlerts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consulalert_type', models.CharField(choices=[('InfluxDB', 'InfluxDB'), ('Slack', 'Slack'), ('Mattermost', 'Mattermost'), ('PagerDuty', 'PagerDuty'), ('HipChat', 'HipChat'), ('OpsGenie', 'OpsGenie'), ('AWS-SNS', 'AWS-SNS'), ('VictorOps', 'VictorOps')], default='PagerDuty', max_length=20, verbose_name='Service Name')),
                ('attributes', freenasUI.freeadmin.models.fields.DictField(editable=False, verbose_name='Attributes')),
                ('enabled', models.BooleanField(default=False, verbose_name='Enabled')),
            ],
            options={
                'verbose_name': 'Alert',
                'verbose_name_plural': 'Consul Alerts',
                'ordering': ['consulalert_type'],
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=False, verbose_name='Enable automatic support alerts to iXsystems')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='Name of Primary Contact')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Title')),
                ('email', models.EmailField(blank=True, max_length=200, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=200, verbose_name='Phone')),
                ('secondary_name', models.CharField(blank=True, max_length=200, verbose_name='Name of Secondary Contact')),
                ('secondary_title', models.CharField(blank=True, max_length=200, verbose_name='Secondary Title')),
                ('secondary_email', models.EmailField(blank=True, max_length=200, verbose_name='Secondary E-mail')),
                ('secondary_phone', models.CharField(blank=True, max_length=200, verbose_name='Secondary Phone')),
            ],
            options={
                'verbose_name': 'Proactive Support',
            },
        ),
        migrations.AlterField(
            model_name='advanced',
            name='adv_graphite',
            field=models.CharField(blank=True, default='', help_text='A hostname or IP here will be used as the destination to send collectd data to using the graphite plugin to collectd.', max_length=120, verbose_name='Remote Graphite Server Hostname'),
        ),
        migrations.AlterField(
            model_name='advanced',
            name='adv_motd',
            field=models.TextField(default='Welcome', max_length=1024, verbose_name='MOTD banner'),
        ),
        migrations.AlterField(
            model_name='advanced',
            name='adv_periodic_notifyuser',
            field=freenasUI.freeadmin.models.fields.UserField(default='root', help_text='If you wish periodic emails to be sent to a different email address than the alert emails are set to (root) set an email address for a user and select that user in the dropdown.', max_length=120, verbose_name='Periodic Notification User'),
        ),
        migrations.AlterField(
            model_name='advanced',
            name='adv_serialport',
            field=models.CharField(choices=[('0x2f8', '0x2f8'), ('0x3f8', '0x3f8')], default='0x2f8', help_text='Set this to match your serial port address (0x3f8, 0x2f8, etc.)', max_length=120, verbose_name='Serial Port Address'),
        ),
        migrations.AlterField(
            model_name='advanced',
            name='adv_serialspeed',
            field=models.CharField(choices=[('9600', '9600'), ('19200', '19200'), ('38400', '38400'), ('57600', '57600'), ('115200', '115200')], default='9600', help_text='Set this to match your serial port speed', max_length=120, verbose_name='Serial Port Speed'),
        ),
        migrations.AlterField(
            model_name='alert',
            name='node',
            field=models.CharField(default='A', max_length=100),
        ),
        migrations.AlterField(
            model_name='certificate',
            name='cert_digest_algorithm',
            field=models.CharField(blank=True, default='SHA256', max_length=120, null=True, verbose_name='Digest Algorithm'),
        ),
        migrations.AlterField(
            model_name='certificateauthority',
            name='cert_digest_algorithm',
            field=models.CharField(blank=True, default='SHA256', max_length=120, null=True, verbose_name='Digest Algorithm'),
        ),
        migrations.AlterField(
            model_name='cloudcredentials',
            name='provider',
            field=models.CharField(choices=[('AMAZON', 'Amazon S3')], max_length=50, verbose_name='Provider'),
        ),
        migrations.AlterField(
            model_name='email',
            name='em_fromemail',
            field=models.CharField(default='', help_text='An email address that the system will use for the sending address for mail it sends, eg: freenas@example.com', max_length=120, verbose_name='From email'),
        ),
        migrations.AlterField(
            model_name='email',
            name='em_security',
            field=models.CharField(choices=[('plain', 'Plain'), ('ssl', 'SSL'), ('tls', 'TLS')], default='plain', help_text='encryption of the connection', max_length=120, verbose_name='TLS/SSL'),
        ),
        migrations.AlterField(
            model_name='settings',
            name='stg_guiaddress',
            field=models.CharField(blank=True, default='0.0.0.0', max_length=120, verbose_name='WebGUI IPv4 Address'),
        ),
        migrations.AlterField(
            model_name='settings',
            name='stg_guiprotocol',
            field=models.CharField(choices=[('http', 'HTTP'), ('https', 'HTTPS'), ('httphttps', 'HTTP+HTTPS')], default='http', max_length=120, verbose_name='Protocol'),
        ),
        migrations.AlterField(
            model_name='settings',
            name='stg_guiv6address',
            field=models.CharField(blank=True, default='::', max_length=120, verbose_name='WebGUI IPv6 Address'),
        ),
        migrations.AlterField(
            model_name='settings',
            name='stg_kbdmap',
            field=models.CharField(blank=True, choices=[('be.iso', 'Belgian ISO-8859-1'), ('be.iso.acc', 'Belgian ISO-8859-1 (accent keys)'), ('bg.bds.ctrlcaps', 'Bulgarian (BDS)'), ('bg.phonetic.ctrlcaps', 'Bulgarian (Phonetic)'), ('br275.iso', 'Brazilian 275 ISO-8859-1'), ('br275.iso.acc', 'Brazilian 275 ISO-8859-1 (accent keys)'), ('br275.cp850', 'Brazilian 275 Codepage 850'), ('by.cp1131', 'Belarusian Codepage 1131'), ('by.cp1251', 'Belarusian Codepage 1251'), ('by.iso5', 'Belarusian ISO-8859-5'), ('ce.iso2', 'Central European ISO-8859-2'), ('colemak.iso15.acc', 'Colemak ergonomic alternative'), ('cs.latin2.qwertz', 'Czech ISO-8859-2 (QWERTZ, accent keys)'), ('cz.iso2', 'Czech ISO-8859-2'), ('danish.iso', 'Danish ISO-8859-1'), ('danish.iso.acc', 'Danish ISO-8859-1 (accent keys)'), ('danish.cp865', 'Danish Codepage 865'), ('danish.iso.macbook', 'Danish ISO-8859-1 (macbook)'), ('dutch.iso.acc', 'Dutch ISO keymap (accent keys)'), ('eee_nordic', 'Nordic layout on Asus eeePC'), ('el.iso07', 'Greek ISO-8859-7 (104 keys)'), ('estonian.iso', 'Estonian ISO-8859-1'), ('estonian.iso15', 'Estonian ISO-8859-15'), ('estonian.cp850', 'Estonian Codepage 850'), ('finnish.iso', 'Finnish ISO-8859-1'), ('finnish.cp850', 'Finnish Codepage 850'), ('fr.iso', 'French ISO-8859-1'), ('fr.iso.acc', 'French ISO-8859-1 (accent keys)'), ('fr.macbook.acc', 'French Macbook/Macbook Pro ISO-8859-15 (accent keys)'), ('fr.dvorak', 'French Dvorak-like'), ('fr.dvorak.acc', 'French Dvorak-like (accent keys)'), ('fr_CA.iso.acc', 'French Canadian ISO-8859-1 (accent keys)'), ('german.iso', 'German ISO-8859-15'), ('german.iso.acc', 'German ISO-8859-15 (accent keys)'), ('german.cp850', 'German Codepage 850'), ('gr.elot.acc', 'Greek ISO-8859-7 ELOT'), ('gr.us101.acc', 'Greek ISO-8859-7 (101 keys)'), ('iw.iso8', 'Hebrew ISO-8859-8'), ('hr.iso', 'Croatian ISO-8859-2'), ('hu.iso2.101keys', 'Hungarian 101 ISO-8859-2'), ('hu.iso2.102keys', 'Hungarian 102 ISO-8859-2'), ('hy.armscii-8', 'Armenian phonetic layout'), ('icelandic.iso', 'Icelandic ISO-8859-1'), ('icelandic.iso.acc', 'Icelandic ISO-8859-1 (accent keys)'), ('it.iso', 'Italian ISO-8859-1'), ('jp.106', 'Japanese 106'), ('jp.106x', 'Japanese 106x'), ('jp.pc98', 'Japanese PC-98x1'), ('jp.pc98.iso', 'Japanese PC-98x1 (ISO)'), ('kk.pt154.kst', 'Kazakh PT154 codepage'), ('kk.pt154.io', 'Kazakh PT154 codepage (with IO)'), ('latinamerican', 'Latin American'), ('latinamerican.iso.acc', 'Latin American (accent keys)'), ('lt.iso4', 'Lithuanian ISO-8859-4'), ('norwegian.iso', 'Norwegian ISO-8859-1'), ('norwegian.dvorak', 'Norwegian dvorak'), ('pl_PL.ISO8859-2', "Polish ISO-8859-2 (programmer's)"), ('pl_PL.dvorak', 'Polish Dvorak'), ('pt.iso', 'Portuguese ISO-8859-1'), ('pt.iso.acc', 'Portuguese ISO-8859-1 (accent keys)'), ('ru.cp866', 'Russian Codepage 866 (alternative)'), ('ru.iso5', 'Russian ISO-8859-5'), ('ru.koi8-r', 'Russian koi8-r'), ('ru.koi8-r.shift', 'Russian koi8-r (shift)'), ('ru.koi8-r.win', 'Russian koi8-r (winkeys)'), ('spanish.dvorak', 'Spanish Dvorak'), ('spanish.iso', 'Spanish ISO-8859-1'), ('spanish.iso.acc', 'Spanish ISO-8859-1 (accent keys)'), ('spanish.iso15.acc', 'Spanish ISO-8859-15 (accent keys)'), ('si.iso', 'Slovenian ISO-8859-2'), ('sk.iso2', 'Slovak ISO-8859-2'), ('swedish.iso', 'Swedish ISO-8859-1'), ('swedish.cp850', 'Swedish Codepage 850'), ('swissfrench.iso', 'Swiss-French ISO-8859-1'), ('swissfrench.iso.acc', 'Swiss-French ISO-8859-1 (accent keys)'), ('swissfrench.cp850', 'Swiss-French Codepage 850'), ('swissgerman.iso', 'Swiss-German ISO-8859-1'), ('swissgerman.iso.acc', 'Swiss-German ISO-8859-1 (accent keys)'), ('swissgerman.cp850', 'Swiss-German Codepage 850'), ('swissgerman.macbook.acc', 'Swiss-German Macbook/Macbook Pro (accent keys)'), ('tr.iso9.q', 'Turkish ISO-8859-9'), ('uk.iso', 'United Kingdom ISO-8859-1'), ('uk.iso-ctrl', 'United Kingdom ISO-8859-1 (Caps Lock acts as Left Ctrl)'), ('uk.cp850', 'United Kingdom Codepage 850'), ('uk.cp850-ctrl', 'United Kingdom Codepage 850 (Caps Lock acts as Left Ctrl)'), ('uk.dvorak', 'United Kingdom Dvorak'), ('us.iso', 'United States of America ISO-8859-1'), ('us.iso.acc', 'United States of America ISO-8859-1 (accent keys)'), ('us.dvorak', 'United States of America dvorak'), ('us.dvorakr', 'United States of America righthand dvorak'), ('us.dvorakl', 'United States of America lefthand dvorak'), ('us.dvorakp', 'United States of America Programmer Dvorak'), ('us.dvorakx', 'United States of America dvorakx'), ('us.emacs', 'United States of America Emacs optimized layout'), ('us.pc-ctrl', 'United States of America ISO-8859-1 (Caps Lock acts as Left Ctrl)'), ('us.unix', 'United States of America Traditional Unix Workstation'), ('ua.iso5', 'Ukrainian ISO-8859-5'), ('ua.koi8-u', 'Ukrainian koi8-u'), ('ua.koi8-u.shift.alt', 'Ukrainian koi8-u with koi8-r (shift)')], max_length=120, verbose_name='Console Keyboard Map'),
        ),
        migrations.AlterField(
            model_name='settings',
            name='stg_language',
            field=models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en', max_length=120, verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='settings',
            name='stg_sysloglevel',
            field=models.CharField(choices=[('f_emerg', 'Emergency'), ('f_alert', 'Alert'), ('f_crit', 'Critical'), ('f_err', 'Error'), ('f_warning', 'Warning'), ('f_notice', 'Notice'), ('f_info', 'Info'), ('f_debug', 'Debug'), ('f_is_debug', 'Is_Debug')], default='f_info', help_text='Specifies which messages will be logged by server. INFO and VERBOSE log transactions that server performs on behalf of the client. f_is_debug specify higher levels of debugging output. The default is f_info.', max_length=120, verbose_name='Syslog level'),
        ),
        migrations.AlterField(
            model_name='settings',
            name='stg_syslogserver',
            field=models.CharField(blank=True, default='', help_text='Specifies the server and port syslog messages will be sent to.  The accepted format is hostname:port or ip:port, if :port is not specified it will default to port 514 (this field currently only takes IPv4 addresses)', max_length=120, verbose_name='Syslog server'),
        ),
        migrations.AlterField(
            model_name='settings',
            name='stg_timezone',
            field=models.CharField(choices=[('Africa/Abidjan', 'Africa/Abidjan'), ('Africa/Accra', 'Africa/Accra'), ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'), ('Africa/Algiers', 'Africa/Algiers'), ('Africa/Asmara', 'Africa/Asmara'), ('Africa/Bamako', 'Africa/Bamako'), ('Africa/Bangui', 'Africa/Bangui'), ('Africa/Banjul', 'Africa/Banjul'), ('Africa/Bissau', 'Africa/Bissau'), ('Africa/Blantyre', 'Africa/Blantyre'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Casablanca', 'Africa/Casablanca'), ('Africa/Ceuta', 'Africa/Ceuta'), ('Africa/Conakry', 'Africa/Conakry'), ('Africa/Dakar', 'Africa/Dakar'), ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'), ('Africa/Djibouti', 'Africa/Djibouti'), ('Africa/Douala', 'Africa/Douala'), ('Africa/El_Aaiun', 'Africa/El_Aaiun'), ('Africa/Freetown', 'Africa/Freetown'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Africa/Harare', 'Africa/Harare'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('Africa/Juba', 'Africa/Juba'), ('Africa/Kampala', 'Africa/Kampala'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Africa/Kigali', 'Africa/Kigali'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Libreville', 'Africa/Libreville'), ('Africa/Lome', 'Africa/Lome'), ('Africa/Luanda', 'Africa/Luanda'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Africa/Lusaka', 'Africa/Lusaka'), ('Africa/Malabo', 'Africa/Malabo'), ('Africa/Maputo', 'Africa/Maputo'), ('Africa/Maseru', 'Africa/Maseru'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('Africa/Niamey', 'Africa/Niamey'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Africa/Sao_Tome', 'Africa/Sao_Tome'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Africa/Tunis', 'Africa/Tunis'), ('Africa/Windhoek', 'Africa/Windhoek'), ('America/Adak', 'America/Adak'), ('America/Anchorage', 'America/Anchorage'), ('America/Anguilla', 'America/Anguilla'), ('America/Antigua', 'America/Antigua'), ('America/Araguaina', 'America/Araguaina'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Argentina/La_Rioja', 'America/Argentina/La_Rioja'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio_Gallegos'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('America/Argentina/San_Juan', 'America/Argentina/San_Juan'), ('America/Argentina/San_Luis', 'America/Argentina/San_Luis'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('America/Aruba', 'America/Aruba'), ('America/Asuncion', 'America/Asuncion'), ('America/Atikokan', 'America/Atikokan'), ('America/Bahia', 'America/Bahia'), ('America/Bahia_Banderas', 'America/Bahia_Banderas'), ('America/Barbados', 'America/Barbados'), ('America/Belem', 'America/Belem'), ('America/Belize', 'America/Belize'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Boa_Vista', 'America/Boa_Vista'), ('America/Bogota', 'America/Bogota'), ('America/Boise', 'America/Boise'), ('America/Cambridge_Bay', 'America/Cambridge_Bay'), ('America/Campo_Grande', 'America/Campo_Grande'), ('America/Cancun', 'America/Cancun'), ('America/Caracas', 'America/Caracas'), ('America/Cayenne', 'America/Cayenne'), ('America/Cayman', 'America/Cayman'), ('America/Chicago', 'America/Chicago'), ('America/Chihuahua', 'America/Chihuahua'), ('America/Costa_Rica', 'America/Costa_Rica'), ('America/Creston', 'America/Creston'), ('America/Cuiaba', 'America/Cuiaba'), ('America/Curacao', 'America/Curacao'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('America/Dawson', 'America/Dawson'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Denver', 'America/Denver'), ('America/Detroit', 'America/Detroit'), ('America/Dominica', 'America/Dominica'), ('America/Edmonton', 'America/Edmonton'), ('America/Eirunepe', 'America/Eirunepe'), ('America/El_Salvador', 'America/El_Salvador'), ('America/Fort_Nelson', 'America/Fort_Nelson'), ('America/Fortaleza', 'America/Fortaleza'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Godthab', 'America/Godthab'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Grand_Turk', 'America/Grand_Turk'), ('America/Grenada', 'America/Grenada'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Guatemala', 'America/Guatemala'), ('America/Guayaquil', 'America/Guayaquil'), ('America/Guyana', 'America/Guyana'), ('America/Halifax', 'America/Halifax'), ('America/Havana', 'America/Havana'), ('America/Hermosillo', 'America/Hermosillo'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('America/Indiana/Tell_City', 'America/Indiana/Tell_City'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('America/Inuvik', 'America/Inuvik'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Jamaica', 'America/Jamaica'), ('America/Juneau', 'America/Juneau'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Kralendijk', 'America/Kralendijk'), ('America/La_Paz', 'America/La_Paz'), ('America/Lima', 'America/Lima'), ('America/Los_Angeles', 'America/Los_Angeles'), ('America/Lower_Princes', 'America/Lower_Princes'), ('America/Maceio', 'America/Maceio'), ('America/Managua', 'America/Managua'), ('America/Manaus', 'America/Manaus'), ('America/Marigot', 'America/Marigot'), ('America/Martinique', 'America/Martinique'), ('America/Matamoros', 'America/Matamoros'), ('America/Mazatlan', 'America/Mazatlan'), ('America/Menominee', 'America/Menominee'), ('America/Merida', 'America/Merida'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Miquelon', 'America/Miquelon'), ('America/Moncton', 'America/Moncton'), ('America/Monterrey', 'America/Monterrey'), ('America/Montevideo', 'America/Montevideo'), ('America/Montserrat', 'America/Montserrat'), ('America/Nassau', 'America/Nassau'), ('America/New_York', 'America/New_York'), ('America/Nipigon', 'America/Nipigon'), ('America/Nome', 'America/Nome'), ('America/Noronha', 'America/Noronha'), ('America/North_Dakota/Beulah', 'America/North_Dakota/Beulah'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Panama', 'America/Panama'), ('America/Pangnirtung', 'America/Pangnirtung'), ('America/Paramaribo', 'America/Paramaribo'), ('America/Phoenix', 'America/Phoenix'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('America/Porto_Velho', 'America/Porto_Velho'), ('America/Puerto_Rico', 'America/Puerto_Rico'), ('America/Rainy_River', 'America/Rainy_River'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Recife', 'America/Recife'), ('America/Regina', 'America/Regina'), ('America/Resolute', 'America/Resolute'), ('America/Rio_Branco', 'America/Rio_Branco'), ('America/Santarem', 'America/Santarem'), ('America/Santiago', 'America/Santiago'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('America/Scoresbysund', 'America/Scoresbysund'), ('America/Sitka', 'America/Sitka'), ('America/St_Barthelemy', 'America/St_Barthelemy'), ('America/St_Johns', 'America/St_Johns'), ('America/St_Kitts', 'America/St_Kitts'), ('America/St_Lucia', 'America/St_Lucia'), ('America/St_Thomas', 'America/St_Thomas'), ('America/St_Vincent', 'America/St_Vincent'), ('America/Swift_Current', 'America/Swift_Current'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('America/Thule', 'America/Thule'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('America/Tijuana', 'America/Tijuana'), ('America/Toronto', 'America/Toronto'), ('America/Tortola', 'America/Tortola'), ('America/Vancouver', 'America/Vancouver'), ('America/Whitehorse', 'America/Whitehorse'), ('America/Winnipeg', 'America/Winnipeg'), ('America/Yakutat', 'America/Yakutat'), ('America/Yellowknife', 'America/Yellowknife'), ('Antarctica/Casey', 'Antarctica/Casey'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Aden', 'Asia/Aden'), ('Asia/Almaty', 'Asia/Almaty'), ('Asia/Amman', 'Asia/Amman'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Asia/Aqtau', 'Asia/Aqtau'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Asia/Atyrau', 'Asia/Atyrau'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Asia/Baku', 'Asia/Baku'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Asia/Barnaul', 'Asia/Barnaul'), ('Asia/Beirut', 'Asia/Beirut'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Asia/Brunei', 'Asia/Brunei'), ('Asia/Chita', 'Asia/Chita'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Asia/Colombo', 'Asia/Colombo'), ('Asia/Damascus', 'Asia/Damascus'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Asia/Dili', 'Asia/Dili'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Asia/Famagusta', 'Asia/Famagusta'), ('Asia/Gaza', 'Asia/Gaza'), ('Asia/Hebron', 'Asia/Hebron'), ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Asia/Istanbul', 'Asia/Istanbul'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Asia/Kabul', 'Asia/Kabul'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Asia/Karachi', 'Asia/Karachi'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('Asia/Khandyga', 'Asia/Khandyga'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Kuching', 'Asia/Kuching'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Macau', 'Asia/Macau'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Makassar', 'Asia/Makassar'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Muscat', 'Asia/Muscat'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Oral', 'Asia/Oral'), ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Singapore', 'Asia/Singapore'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Asia/Tehran', 'Asia/Tehran'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Asia/Tomsk', 'Asia/Tomsk'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Asia/Vientiane', 'Asia/Vientiane'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Asia/Yangon', 'Asia/Yangon'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'), ('Atlantic/St_Helena', 'Atlantic/St_Helena'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Australia/Currie', 'Australia/Currie'), ('Australia/Darwin', 'Australia/Darwin'), ('Australia/Eucla', 'Australia/Eucla'), ('Australia/Hobart', 'Australia/Hobart'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Australia/Perth', 'Australia/Perth'), ('Australia/Sydney', 'Australia/Sydney'), ('CET', 'CET'), ('CST6CDT', 'CST6CDT'), ('EET', 'EET'), ('EST', 'EST'), ('EST5EDT', 'EST5EDT'), ('Etc/Greenwich', 'Etc/Greenwich'), ('Etc/UCT', 'Etc/UCT'), ('Etc/UTC', 'Etc/UTC'), ('Etc/Universal', 'Etc/Universal'), ('Etc/Zulu', 'Etc/Zulu'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Europe/Andorra', 'Europe/Andorra'), ('Europe/Astrakhan', 'Europe/Astrakhan'), ('Europe/Athens', 'Europe/Athens'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Europe/Berlin', 'Europe/Berlin'), ('Europe/Bratislava', 'Europe/Bratislava'), ('Europe/Brussels', 'Europe/Brussels'), ('Europe/Bucharest', 'Europe/Bucharest'), ('Europe/Budapest', 'Europe/Budapest'), ('Europe/Busingen', 'Europe/Busingen'), ('Europe/Chisinau', 'Europe/Chisinau'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Europe/Dublin', 'Europe/Dublin'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Isle_of_Man', 'Europe/Isle_of_Man'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Europe/Jersey', 'Europe/Jersey'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('Europe/Kiev', 'Europe/Kiev'), ('Europe/Kirov', 'Europe/Kirov'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Europe/London', 'Europe/London'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('Europe/Madrid', 'Europe/Madrid'), ('Europe/Malta', 'Europe/Malta'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Europe/Minsk', 'Europe/Minsk'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Nicosia', 'Europe/Nicosia'), ('Europe/Oslo', 'Europe/Oslo'), ('Europe/Paris', 'Europe/Paris'), ('Europe/Podgorica', 'Europe/Podgorica'), ('Europe/Prague', 'Europe/Prague'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Rome', 'Europe/Rome'), ('Europe/Samara', 'Europe/Samara'), ('Europe/San_Marino', 'Europe/San_Marino'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Europe/Saratov', 'Europe/Saratov'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Europe/Skopje', 'Europe/Skopje'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Tallinn', 'Europe/Tallinn'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Ulyanovsk', 'Europe/Ulyanovsk'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Vienna', 'Europe/Vienna'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Europe/Zurich', 'Europe/Zurich'), ('Factory', 'Factory'), ('HST', 'HST'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('Indian/Chagos', 'Indian/Chagos'), ('Indian/Christmas', 'Indian/Christmas'), ('Indian/Cocos', 'Indian/Cocos'), ('Indian/Comoro', 'Indian/Comoro'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Indian/Mahe', 'Indian/Mahe'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Indian/Reunion', 'Indian/Reunion'), ('MET', 'MET'), ('MST', 'MST'), ('MST7MDT', 'MST7MDT'), ('PST8PDT', 'PST8PDT'), ('Pacific/Apia', 'Pacific/Apia'), ('Pacific/Auckland', 'Pacific/Auckland'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Pacific/Easter', 'Pacific/Easter'), ('Pacific/Efate', 'Pacific/Efate'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Pacific/Guam', 'Pacific/Guam'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Johnston', 'Pacific/Johnston'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Pacific/Midway', 'Pacific/Midway'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Pacific/Niue', 'Pacific/Niue'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'), ('Pacific/Palau', 'Pacific/Palau'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Pacific/Saipan', 'Pacific/Saipan'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Pacific/Wake', 'Pacific/Wake'), ('Pacific/Wallis', 'Pacific/Wallis'), ('UTC', 'UTC'), ('WET', 'WET'), ('posixrules', 'posixrules')], default='America/Los_Angeles', max_length=120, verbose_name='Timezone'),
        ),
        migrations.AlterField(
            model_name='systemdataset',
            name='sys_rrd_usedataset',
            field=models.BooleanField(default=True, help_text='Save the Round-Robin Database (RRD) used by system statistics collection daemon into the system dataset', verbose_name='Reporting Database'),
        ),
        migrations.AlterField(
            model_name='tunable',
            name='tun_type',
            field=models.CharField(choices=[('loader', 'Loader'), ('rc', 'rc.conf'), ('sysctl', 'Sysctl')], default='loader', max_length=20, verbose_name='Type'),
        ),
    ]
